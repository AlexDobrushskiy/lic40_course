# Question 7: Deep Reverse

# Реализуйте процедуру deep_reverse, которая принимает на вход список,
# и возвращает новый список, который является глубоко-реверсированным входным списком.
# Это означает, что все элементы должны быть реверсированы (т.е. их порядок должен быть
# изменен на обратный). И если элемент является списоком, он также должен быть реверсирован.
# Соответственно, если внутри элемента-списка если еще один список - то он также должен быть
# реверсиирован, итд "до бесконечности":) 
# Процедура не должна изменять входящий список, а должна генерировать новый.

# Процедура is_list служит для определения, является ли элемент списоком (мы использовали 
# подобное на прошлом занятии):
def is_list(p):
    return isinstance(p, list)

def deep_reverse(p):
    pass    



#For example,

p = [1, [2, 3, [4, [5, 6]]]]
print deep_reverse(p)
#>>> [[[[6, 5], 4], 3, 2], 1]
print p
#>>> [1, [2, 3, [4, [5, 6]]]]

q =  [1, [2,3], 4, [5,6]]
print deep_reverse(q)
#>>> [ [6,5], 4, [3, 2], 1]
print q
#>>> [1, [2,3], 4, [5,6]]
